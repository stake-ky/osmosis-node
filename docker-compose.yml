version: "3.7"

services:

  osmosis:
    container_name: osmosis
    build:
      context: .
      dockerfile: ./docker/Dockerfile.osmosis
      args:
        - OSMOSIS_VERSION=v3.1.0
    environment:
      - CHAIN_ID=$CHAIN_ID
      - YOUR_MONIKER=$YOUR_MONIKER
      - DAEMON_HOME=/root/.osmosisd
      - DAEMON_NAME=osmosisd
      - DAEMON_ALLOW_DOWNLOAD_BINARIES=false
      - DAEMON_RESTART_AFTER_UPGRADE=true
      - DAEMON_LOG_BUFFER_SIZE=512      
    init: true
    stdin_open: true
    tty: true    
    ports:
      - "26656-26657:26656-26657"
    # restart: unless-stopped
    volumes:
      - ./osmosisd:/root/.osmosisd

  # cosmovisor:
  #   depends_on: 
  #     - osmosis
  #   container_name: cosmovisor
  #   build:
  #     context: .
  #     dockerfile: ./docker/Dockerfile.cosmovisor
  #     args:
  #       - COSMOVISOR_VERSION=v0.42.9
  #   environment:
  #     - DAEMON_HOME=/root/.osmosisd
  #     - DAEMON_NAME=osmosisd
  #     - DAEMON_ALLOW_DOWNLOAD_BINARIES=false
  #     - DAEMON_RESTART_AFTER_UPGRADE=true
  #     - DAEMON_LOG_BUFFER_SIZE=512
  #   init: true
  #   stdin_open: true
  #   tty: true
  #     volumes:
  #     - ./osmosisd:/root/.osmosisd/config

  nginx:
    image: nginx:1.15-alpine
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./logs/nginx:/var/log/nginx
      # - ./certbot/etc:/etc/letsencrypt
      # - ./certbot/www:/var/www/certbot
      # - ./.credentials:/etc/prometheus/.credentials
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
      - "26686:26656"
      - "26687:26657"

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./certbot/etc:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 5d & wait $${!}; done;'"

  # node_exporter:
  #   image: quay.io/prometheus/node-exporter:latest
  #   container_name: node_exporter
  #   command:
  #     - '--path.rootfs=/host'
  #   pid: host
  #   restart: unless-stopped
  #   volumes:
  #     - '/:/host:ro,rslave'
  #   ports:
  #     - "9100:9100"    